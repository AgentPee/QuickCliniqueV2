﻿@{
ViewData["Title"] = "Home Page";
}

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
}

<div class="main-content">
    <!-- Hero Section -->
    <section class="hero">
        <h1>University of Cebu Medical-Dental Clinic</h1>
        <p>Providing quality healthcare services to the UC community with compassion and excellence</p>
        <div class="hero-buttons">
            <a href="#dashboard" class="btn btn-primary"><i class="fas fa-calendar-check"></i> Book Appointment</a>
            <a href="#dental-schedule" class="btn btn-outline"><i class="fas fa-tooth"></i> Dental Schedule</a>
        </div>
    </section>

    <!-- Dashboard Section -->
    <section class="dashboard-section" id="dashboard">
        <h2 class="dashboard-header"><i class="fas fa-chart-line"></i> STUDENT DASHBOARD</h2>

        <div class="dashboard-grid">
            <!-- Appointment Booking -->
            <div class="appointment-card">
                <h3>Book New Appointment</h3>
                <form id="appointmentForm">
                    <div class="form-group">
                        <label for="appointmentDate">Select Date</label>
                        <input type="date" id="appointmentDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                        <span class="validation-error" id="dateError"></span>
                    </div>

                    <div class="form-group">
                        <label for="availableSlots">Available Time Slots</label>
                        <select id="availableSlots" required disabled>
                            <option value="">Select a date first</option>
                        </select>
                        <span class="validation-error" id="slotError"></span>
                        <div id="slotLoading" class="loading-message" style="display: none;">
                            <i class="fas fa-spinner fa-spin"></i> Loading available slots...
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="serviceRequired">Service Required</label>
                        <select id="serviceRequired" required>
                            <option value="">Select a Service</option>
                            <option value="medical-checkup">General Medical Checkup</option>
                            <option value="dental-checkup">Dental Checkup</option>
                            <option value="dental-cleaning">Dental Cleaning/Prophylaxis</option>
                            <option value="dental-pasta">Dental Pasta (Fillings)</option>
                            <option value="dental-extraction">Tooth Extraction</option>
                            <option value="consultation">Medical Consultation</option>
                            <option value="bp-monitoring">Blood Pressure Monitoring</option>
                            <option value="vaccination">Vaccination</option>
                            <option value="emergency">Emergency Care</option>
                        </select>
                        <span class="validation-error" id="serviceError"></span>
                    </div>

                    <div class="form-group">
                        <label for="symptoms">Symptoms/Concerns</label>
                        <textarea id="symptoms" placeholder="Describe your symptoms or concerns in detail..." rows="3" required></textarea>
                        <span class="validation-error" id="symptomsError"></span>
                    </div>

                    <button type="submit" class="submit-appointment-btn" id="submitAppointment">
                        <i class="fas fa-calendar-check"></i> Submit Appointment Request
                    </button>
                </form>
                <div id="appointmentMessage" class="message-container"></div>
            </div>

            <!-- Real-Time Queue -->
            <div class="queue-card">
                <div class="queue-header">
                    <i class="fas fa-clock"></i> Real-Time Queue
                    <button class="refresh-btn" id="refreshQueue"><i class="fas fa-sync-alt"></i></button>
                </div>
                <div class="queue-info">
                    <h4>Now Serving:</h4>
                    <p id="nowServing">N/A (No consultation active)</p>
                </div>
                <div class="queue-info">
                    <h4>Waiting in line:</h4>
                    <p id="waitingCount">0 patient(s)</p>
                </div>
                <div class="queue-message" id="queueMessage">
                    <p>You have no active appointment in the queue.</p>
                </div>
                <div class="queue-info" style="margin-top: 15px;">
                    <h4>Your Queue Number:</h4>
                    <p id="userQueueNumber">-</p>
                </div>
            </div>
        </div>

        <!-- Appointment History -->
        <div class="history-section">
            <div class="history-header">
                <i class="fas fa-history"></i> Appointment History
                <button class="refresh-btn" id="refreshHistory"><i class="fas fa-sync-alt"></i></button>
            </div>
            <div class="history-list" id="historyList">
                <div class="no-records">No records found.</div>
            </div>
        </div>
    </section>

    <!-- Rest of the sections remain the same -->
    <!-- Dental Schedule Section -->
    <section class="section" id="dental-schedule">
        <!-- ... existing dental schedule content ... -->
    </section>

    <!-- Messaging Section -->
    <section class="messaging-section" id="messaging">
        <div class="messaging-header">
            <i class="fas fa-comments"></i> Clinic Communications
        </div>
        <div class="messaging-container">
            <div class="chat-header">
                <i class="fas fa-user-md"></i> Clinic Staff
            </div>
            <div class="chat-messages" id="chatMessages">
                <div class="message received">
                    <div class="message-content">
                        Welcome to QuickClinique! How can we assist you today?
                    </div>
                    <div class="message-time">09:00 AM</div>
                </div>
            </div>
            <div class="chat-input">
                <input type="text" id="messageInput" placeholder="Type your message...">
                <button class="send-btn" id="sendMessage">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </section>

    <!-- Mission & Vision, Staff, Objectives sections remain the same -->
</div>

@section Scripts {
    <script>
        // Enhanced appointment functionality
        let availableSlots = [];

        // DOM Ready
        document.addEventListener('DOMContentLoaded', function() {
            initializeEnhancedAppointment();
            // ... other existing initialization code
        });

        function initializeEnhancedAppointment() {
            const appointmentDate = document.getElementById('appointmentDate');
            const availableSlotsSelect = document.getElementById('availableSlots');

            // Load available slots when date changes
            appointmentDate.addEventListener('change', function() {
                loadAvailableSlots(this.value);
            });

            // Set minimum date to today
            appointmentDate.min = new Date().toISOString().split('T')[0];

            // Initialize appointment form
            const appointmentForm = document.getElementById('appointmentForm');
            appointmentForm.addEventListener('submit', handleEnhancedAppointmentSubmit);
        }

        // Load available slots for selected date
        async function loadAvailableSlots(selectedDate) {
            const availableSlotsSelect = document.getElementById('availableSlots');
            const slotLoading = document.getElementById('slotLoading');

            if (!selectedDate) {
                availableSlotsSelect.innerHTML = '<option value="">Select a date first</option>';
                availableSlotsSelect.disabled = true;
                return;
            }

            try {
                slotLoading.style.display = 'block';
                availableSlotsSelect.disabled = true;
                availableSlotsSelect.innerHTML = '<option value="">Loading available slots...</option>';

                const response = await fetch(`/Appointments/GetAvailableSlots?date=${selectedDate}`);
                const result = await response.json();

                if (result.success && result.data.length > 0) {
                    availableSlots = result.data;
                    availableSlotsSelect.innerHTML = '<option value="">Select a time slot</option>';

                    result.data.forEach(slot => {
                        const option = document.createElement('option');
                        option.value = slot.ScheduleId;
                        option.textContent = `${slot.StartTime} to ${slot.EndTime} (${slot.AvailableAppointments} appointments)`;
                        option.dataset.slotInfo = JSON.stringify(slot);
                        availableSlotsSelect.appendChild(option);
                    });

                    availableSlotsSelect.disabled = false;
                } else {
                    availableSlotsSelect.innerHTML = '<option value="">No available slots for this date</option>';
                    availableSlotsSelect.disabled = true;
                }
            } catch (error) {
                console.error('Error loading available slots:', error);
                availableSlotsSelect.innerHTML = '<option value="">Error loading slots</option>';
                availableSlotsSelect.disabled = true;
            } finally {
                slotLoading.style.display = 'none';
            }
        }

        // Handle enhanced appointment submission
        async function handleEnhancedAppointmentSubmit(e) {
            e.preventDefault();

            const submitBtn = document.getElementById('submitAppointment');
            const messageContainer = document.getElementById('appointmentMessage');

            if (!validateEnhancedAppointmentForm()) {
                return;
            }

            // Show loading state
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Submitting...';
            messageContainer.innerHTML = '';

            try {
                const selectedSlot = document.getElementById('availableSlots');
                const slotInfo = JSON.parse(selectedSlot.selectedOptions[0].dataset.slotInfo);

                const formData = {
                    ScheduleId: parseInt(selectedSlot.value),
                    ReasonForVisit: document.getElementById('serviceRequired').value,
                    Symptoms: document.getElementById('symptoms').value,
                    PatientId: getCurrentPatientId() // You'll need to implement this based on your auth system
                };

                const response = await fetch('/Appointments/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();

                if (result.success) {
                    showMessage('Appointment booked successfully!', 'success');
                    document.getElementById('appointmentForm').reset();
                    loadAppointmentHistory();
                    updateQueueStatus();

                    // Reset slots dropdown
                    document.getElementById('availableSlots').innerHTML = '<option value="">Select a date first</option>';
                    document.getElementById('availableSlots').disabled = true;
                } else {
                    showMessage(result.error || 'Failed to book appointment', 'error');
                    if (result.errors) {
                        displayEnhancedFormErrors(result.errors);
                    }
                }
            } catch (error) {
                console.error('Error booking appointment:', error);
                showMessage('An error occurred while booking the appointment', 'error');
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = '<i class="fas fa-calendar-check"></i> Submit Appointment Request';
            }
        }

        // Enhanced form validation
        function validateEnhancedAppointmentForm() {
            let isValid = true;
            const dateError = document.getElementById('dateError');
            const slotError = document.getElementById('slotError');
            const serviceError = document.getElementById('serviceError');
            const symptomsError = document.getElementById('symptomsError');

            // Clear previous errors
            dateError.textContent = '';
            slotError.textContent = '';
            serviceError.textContent = '';
            symptomsError.textContent = '';

            const appointmentDate = document.getElementById('appointmentDate').value;
            const availableSlot = document.getElementById('availableSlots').value;
            const serviceRequired = document.getElementById('serviceRequired').value;
            const symptoms = document.getElementById('symptoms').value;

            if (!appointmentDate) {
                dateError.textContent = 'Please select appointment date';
                isValid = false;
            }

            if (!availableSlot) {
                slotError.textContent = 'Please select an available time slot';
                isValid = false;
            }

            if (!serviceRequired) {
                serviceError.textContent = 'Please select a service';
                isValid = false;
            }

            if (!symptoms.trim()) {
                symptomsError.textContent = 'Please describe your symptoms or concerns';
                isValid = false;
            }

            return isValid;
        }

        // Display enhanced form errors
        function displayEnhancedFormErrors(errors) {
            for (const [field, messages] of Object.entries(errors)) {
                const errorElement = document.getElementById(field + 'Error');
                if (errorElement && messages.length > 0) {
                    errorElement.textContent = messages[0];
                }
            }
        }

        // Helper function to get current patient ID (implement based on your authentication)
        function getCurrentPatientId() {
            // This should return the logged-in student's ID
            // For now, returning a placeholder - implement based on your auth system
            const studentId = sessionStorage.getItem('studentId') ||
                             document.querySelector('[data-student-id]')?.dataset.studentId;
            return studentId ? parseInt(studentId) : 1; // Fallback for demo
        }

        // Enhanced appointment history display
        function displayEnhancedAppointmentHistory(appointments) {
            const historyList = document.getElementById('historyList');

            if (appointments && appointments.length > 0) {
                historyList.innerHTML = appointments.map(appointment => `
                    <div class="history-item ${appointment.appointmentStatus.toLowerCase()}">
                        <div class="history-main">
                            <div class="history-date">
                                <strong>Date:</strong> ${new Date(appointment.schedule?.date).toLocaleDateString()}
                            </div>
                            <div class="history-time">
                                <strong>Time:</strong> ${appointment.schedule?.startTime} - ${appointment.schedule?.endTime}
                            </div>
                            <div class="history-service">
                                <strong>Service:</strong> ${appointment.reasonForVisit}
                            </div>
                            <div class="history-symptoms">
                                <strong>Symptoms:</strong> ${appointment.symptoms || 'Not specified'}
                            </div>
                        </div>
                        <div class="history-meta">
                            <div class="history-status ${appointment.appointmentStatus.toLowerCase()}">
                                ${appointment.appointmentStatus}
                            </div>
                            <div class="history-queue">Queue: ${appointment.queueNumber}</div>
                            ${appointment.appointmentStatus === 'Pending' ?
                                `<button class="cancel-btn" onclick="cancelAppointment(${appointment.appointmentId})">
                                    <i class="fas fa-times"></i> Cancel
                                </button>` : ''
                            }
                        </div>
                    </div>
                `).join('');
            } else {
                historyList.innerHTML = '<div class="no-records">No appointment records found.</div>';
            }
        }
    </script>

    <style>
        .loading-message {
            color: #6c757d;
            font-size: 0.875em;
            margin-top: 0.5rem;
        }

        .history-item {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 1rem;
            border: 1px solid #e9ecef;
            border-radius: 0.375rem;
            margin-bottom: 0.75rem;
            background: white;
        }

        .history-main {
            flex: 1;
        }

        .history-meta {
            text-align: right;
            min-width: 120px;
        }

        .history-symptoms {
            margin-top: 0.5rem;
            color: #6c757d;
            font-size: 0.875rem;
        }

        .history-date,
        .history-time,
        .history-service,
        .history-symptoms {
            margin-bottom: 0.25rem;
        }

        textarea#symptoms {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ced4da;
            border-radius: 0.375rem;
            resize: vertical;
        }

        .slot-info {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 0.25rem;
        }

        .validation-error {
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 0.25rem;
            display: block;
        }

        .message-container {
            margin-top: 1rem;
        }

        .alert {
            padding: 0.75rem 1rem;
            margin-bottom: 1rem;
            border: 1px solid transparent;
            border-radius: 0.375rem;
            display: flex;
            justify-content: between;
            align-items: center;
        }

        .alert-success {
            color: #0f5132;
            background-color: #d1e7dd;
            border-color: #badbcc;
        }

        .alert-error {
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }

        .alert-info {
            color: #055160;
            background-color: #cff4fc;
            border-color: #b6effb;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.25rem;
            cursor: pointer;
            margin-left: auto;
        }

        .refresh-btn {
            background: none;
            border: none;
            color: #6c757d;
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 0.25rem;
            transition: color 0.2s;
        }

            .refresh-btn:hover {
                color: #495057;
            }

        .history-item {
            border: 1px solid #e9ecef;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-bottom: 0.75rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background-color 0.2s;
        }

            .history-item:hover {
                background-color: #f8f9fa;
            }

            .history-item.pending {
                border-left: 4px solid #ffc107;
            }

            .history-item.confirmed {
                border-left: 4px solid #28a745;
            }

            .history-item.cancelled {
                border-left: 4px solid #dc3545;
            }

        .history-status {
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.875rem;
            font-weight: 500;
        }

            .history-status.pending {
                background-color: #fff3cd;
                color: #856404;
            }

            .history-status.confirmed {
                background-color: #d1e7dd;
                color: #0f5132;
            }

            .history-status.cancelled {
                background-color: #f8d7da;
                color: #721c24;
            }

        .cancel-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.25rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: background-color 0.2s;
        }

            .cancel-btn:hover {
                background-color: #c82333;
            }

        .message.sent .message-content {
            background-color: #007bff;
            color: white;
        }

        .message.received .message-content {
            background-color: #e9ecef;
            color: #495057;
        }
    </style>
}