@model QuickClinique.Models.Clinicstaff

@{
    ViewData["Title"] = "Edit Clinic Staff";
}

@section Styles {
    <link rel="stylesheet" href="~/css/StaffEdit.css" />
}

<div class="staff-edit-container">
    <div class="edit-header">
        <h2><i class="fas fa-edit"></i> Edit Clinic Staff</h2>
        <p class="staff-id">Staff ID: #@Model.ClinicStaffId</p>
    </div>

    <div class="edit-form-container">
        <form asp-action="Edit" method="post" class="staff-edit-form">
            <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
            <input type="hidden" asp-for="ClinicStaffId" />
            <input type="hidden" asp-for="UserId" />

            <div class="form-grid">
                <div class="form-group">
                    <label asp-for="FirstName" class="form-label">
                        <i class="fas fa-user"></i> First Name
                    </label>
                    <input asp-for="FirstName" class="form-control" placeholder="Enter first name" />
                    <span asp-validation-for="FirstName" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="LastName" class="form-label">
                        <i class="fas fa-user"></i> Last Name
                    </label>
                    <input asp-for="LastName" class="form-control" placeholder="Enter last name" />
                    <span asp-validation-for="LastName" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="form-label">
                        <i class="fas fa-envelope"></i> Email
                    </label>
                    <input asp-for="Email" class="form-control" type="email" placeholder="Enter email address" />
                    <span asp-validation-for="Email" class="validation-message"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PhoneNumber" class="form-label">
                        <i class="fas fa-phone"></i> Phone Number
                    </label>
                    <input asp-for="PhoneNumber" class="form-control"
                           placeholder="e.g., 09345672824"
                           pattern="[0-9]{11}"
                           title="Please enter exactly 11 digits" />
                    <span asp-validation-for="PhoneNumber" class="validation-message"></span>
                    <small class="form-text">Enter your 11-digit phone number (e.g., 09345672824)</small>
                </div>

                <div class="form-group full-width">
                    <label for="newPassword" class="form-label">
                        <i class="fas fa-lock"></i> New Password
                    </label>
                    <input name="newPassword" id="newPassword" class="form-control" type="password"
                           placeholder="Leave blank to keep current password" />
                    <small class="form-text">Leave blank if you don't want to change the password</small>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Save Changes
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-times"></i> Cancel
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const phoneInput = document.querySelector('#PhoneNumber');

            phoneInput.addEventListener('input', function() {
                const value = this.value;
                // Remove any non-digit characters
                this.value = value.replace(/\D/g, '');

                // Limit to 11 digits
                if (this.value.length > 11) {
                    this.value = this.value.slice(0, 11);
                }
            });

            // Add real-time validation feedback
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.value.trim() !== '') {
                        this.classList.add('touched');
                    }
                });

                input.addEventListener('input', function() {
                    if (this.value.trim() !== '') {
                        this.classList.add('touched');
                    }
                });
            });
        });
    </script>
}