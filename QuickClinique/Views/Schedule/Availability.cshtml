@model IEnumerable<QuickClinique.Models.Schedule>

@{
    ViewData["Title"] = "Schedule Availability";
    Layout = "_Layout";

    var filterType = ViewBag.FilterType as string ?? "All";
    var currentFilter = ViewData["CurrentFilter"] as string ?? "All";
    var startDate = ViewData["StartDate"] as string;
    var endDate = ViewData["EndDate"] as string;
}

@section Styles {
    <link rel="stylesheet" href="~/css/avail.css" />
}

<div class="schedule-availability-container">
    <div class="page-header">
        <h1><i class="fas fa-calendar-alt"></i> Schedule Availability</h1>
        <div class="header-actions">
            <div class="btn-group">
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create Schedule
                </a>
                <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
                    <i class="fas fa-caret-down"></i>
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-action="CreateMultiple"><i class="fas fa-calendar-week"></i> Date Range Create</a></li>
                    <li><a class="dropdown-item" asp-action="CreateQuick"><i class="fas fa-bolt"></i> Quick Create</a></li>
                </ul>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Statistics Cards -->
    <div class="stats-grid">
        <div class="stat-card stat-primary">
            <div class="stat-content">
                <div class="stat-info">
                    <h3 class="stat-number">@ViewBag.TotalSchedules</h3>
                    <p class="stat-label">Total Schedules</p>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-calendar-alt"></i>
                </div>
            </div>
        </div>
        <div class="stat-card stat-success">
            <div class="stat-content">
                <div class="stat-info">
                    <h3 class="stat-number">@ViewBag.AvailableSchedules</h3>
                    <p class="stat-label">Available Schedules</p>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-check-circle"></i>
                </div>
            </div>
        </div>
        <div class="stat-card stat-danger">
            <div class="stat-content">
                <div class="stat-info">
                    <h3 class="stat-number">@ViewBag.UnavailableSchedules</h3>
                    <p class="stat-label">Unavailable Schedules</p>
                </div>
                <div class="stat-icon">
                    <i class="fas fa-times-circle"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="filter-card">
        <div class="filter-header">
            <h5><i class="fas fa-filter"></i> Filter Schedules</h5>
        </div>
        <div class="filter-body">
            <form method="get" asp-action="Availability" class="filter-form">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="status" class="form-label">Availability Status</label>
                        <select name="status" id="status" class="form-select">
                            <option value="All" selected="@(currentFilter == "All")">All Schedules</option>
                            <option value="Yes" selected="@(currentFilter == "Yes")">Available Only</option>
                            <option value="No" selected="@(currentFilter == "No")">Unavailable Only</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" name="startDate" id="startDate" class="form-control" value="@startDate" />
                    </div>
                    <div class="form-group">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" name="endDate" id="endDate" class="form-control" value="@endDate" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">&nbsp;</label>
                        <div class="filter-actions">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Apply Filters
                            </button>
                            <a asp-action="Availability" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Clear
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Quick Action Buttons -->
    <div class="quick-actions">
        <div class="btn-group quick-filter-group">
            <a asp-action="Availability" asp-route-status="All" class="btn quick-filter-btn @(currentFilter == "All" ? "btn-primary" : "btn-outline-primary")">
                <i class="fas fa-list"></i> All Schedules (@ViewBag.TotalSchedules)
            </a>
            <a asp-action="Availability" asp-route-status="Yes" class="btn quick-filter-btn @(currentFilter == "Yes" ? "btn-success" : "btn-outline-success")">
                <i class="fas fa-check"></i> Available (@ViewBag.AvailableSchedules)
            </a>
            <a asp-action="Availability" asp-route-status="No" class="btn quick-filter-btn @(currentFilter == "No" ? "btn-danger" : "btn-outline-danger")">
                <i class="fas fa-times"></i> Unavailable (@ViewBag.UnavailableSchedules)
            </a>
        </div>
    </div>

    <!-- Schedules Table -->
    <div class="schedules-card">
        <div class="card-header">
            <div class="header-content">
                <h5 class="card-title">
                    <i class="fas fa-table"></i>
                    @(currentFilter == "All" ? "All Schedules" :
                                        currentFilter == "Yes" ? "Available Schedules" : "Unavailable Schedules")
                    <span class="badge count-badge">@Model.Count()</span>
                </h5>
                <div class="bulk-actions" id="bulkActions">
                    <button type="button" class="btn btn-success btn-sm" onclick="bulkUpdate('Yes')">
                        <i class="fas fa-check"></i> Mark as Available
                    </button>
                    <button type="button" class="btn btn-danger btn-sm" onclick="bulkUpdate('No')">
                        <i class="fas fa-times"></i> Mark as Unavailable
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <form id="bulkForm" method="post" asp-action="BulkUpdateAvailability">
                    @Html.AntiForgeryToken()
                    <div class="table-container">
                        <table class="schedules-table">
                            <thead>
                                <tr>
                                    <th class="checkbox-column">
                                        <input type="checkbox" id="selectAll" />
                                    </th>
                                    <th>Date</th>
                                    <th>Day</th>
                                    <th>Time Slot</th>
                                    <th>Availability</th>
                                    <th>Appointments</th>
                                    <th class="actions-column">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="schedule-row">
                                        <td class="checkbox-column">
                                            <input type="checkbox" name="scheduleIds" value="@item.ScheduleId" class="schedule-checkbox" />
                                        </td>
                                        <td class="date-cell">@item.Date.ToString("yyyy-MM-dd")</td>
                                        <td class="day-cell">@item.Date.DayOfWeek</td>
                                        <td class="time-cell">@item.StartTime.ToString("hh\\:mm tt") - @item.EndTime.ToString("hh\\:mm tt")</td>
                                        <td class="availability-cell">
                                            <span class="availability-badge @(item.IsAvailable == "Yes" ? "available" : "unavailable")">
                                                <i class="fas @(item.IsAvailable == "Yes" ? "fa-check" : "fa-times")"></i>
                                                @(item.IsAvailable == "Yes" ? "Available" : "Unavailable")
                                            </span>
                                        </td>
                                        <td class="appointments-cell">
                                            <span class="appointments-count">
                                                <i class="fas fa-calendar-check"></i>
                                                @(item.Appointments?.Count ?? 0)
                                            </span>
                                        </td>
                                        <td class="actions-cell">
                                            <div class="action-buttons">
                                                <a asp-action="Details" asp-route-id="@item.ScheduleId" class="btn btn-info btn-sm">
                                                    <i class="fas fa-eye"></i> Details
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.ScheduleId" class="btn btn-warning btn-sm">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>
                                              
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-calendar-times"></i>
                    <h4>No schedules found</h4>
                    <p class="text-muted">No schedules match your current filters.</p>
                    <a asp-action="Availability" class="btn btn-primary">
                        <i class="fas fa-list"></i> View All Schedules
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Wait for the document to be fully loaded
        document.addEventListener('DOMContentLoaded', function() {
            initializeCheckboxHandlers();
            initializeFilterHandler();
        });

        function initializeCheckboxHandlers() {
            const selectAll = document.getElementById('selectAll');
            const scheduleCheckboxes = document.querySelectorAll('.schedule-checkbox');

            // Select All functionality
            if (selectAll) {
                selectAll.addEventListener('change', function() {
                    scheduleCheckboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });
                    toggleBulkActions();
                });
            }

            // Individual checkbox change
            scheduleCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    // Update select all checkbox state
                    if (selectAll) {
                        const allChecked = document.querySelectorAll('.schedule-checkbox:checked').length === scheduleCheckboxes.length;
                        const someChecked = document.querySelectorAll('.schedule-checkbox:checked').length > 0;

                        selectAll.checked = allChecked;
                        selectAll.indeterminate = someChecked && !allChecked;
                    }
                    toggleBulkActions();
                });
            });

            // Initial toggle
            toggleBulkActions();
        }

        function initializeFilterHandler() {
            const statusFilter = document.getElementById('status');
            if (statusFilter) {
                statusFilter.addEventListener('change', function() {
                    this.form.submit();
                });
            }
        }

        function toggleBulkActions() {
            const checkedCount = document.querySelectorAll('.schedule-checkbox:checked').length;
            const bulkActions = document.getElementById('bulkActions');

            if (bulkActions) {
                if (checkedCount > 0) {
                    bulkActions.style.display = 'flex';
                } else {
                    bulkActions.style.display = 'none';
                }
            }
        }

        function bulkUpdate(newAvailability) {
            const checkedCount = document.querySelectorAll('.schedule-checkbox:checked').length;
            const action = newAvailability === 'Yes' ? 'available' : 'unavailable';

            if (checkedCount > 0) {
                if (confirm(`Are you sure you want to mark ${checkedCount} schedule(s) as ${action}?`)) {
                    // Create a form for bulk update
                    const form = document.createElement('form');
                    form.method = 'post';
                    form.action = '@Url.Action("BulkUpdateAvailability", "Schedule")';

                    // Add anti-forgery token
                    const token = document.querySelector('input[name="__RequestVerificationToken"]');
                    if (token) {
                        form.appendChild(token.cloneNode());
                    }

                    // Add selected schedule IDs
                    document.querySelectorAll('.schedule-checkbox:checked').forEach(checkbox => {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = 'scheduleIds';
                        input.value = checkbox.value;
                        form.appendChild(input);
                    });

                    // Add availability value
                    const availabilityInput = document.createElement('input');
                    availabilityInput.type = 'hidden';
                    availabilityInput.name = 'newAvailability';
                    availabilityInput.value = newAvailability;
                    form.appendChild(availabilityInput);

                    // Submit the form
                    document.body.appendChild(form);
                    form.submit();
                }
            } else {
                alert('Please select at least one schedule to update.');
            }
        }
    </script>
}