@model QuickClinique.Models.Schedule

@{
    ViewData["Title"] = "Edit Schedule";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/schedEdit.css" />
}

<div class="schedule-edit-container">
    <div class="edit-header">
        <h2><i class="fas fa-edit"></i> Edit Schedule</h2>
        <p class="schedule-id">Editing Schedule #@Model.ScheduleId</p>
    </div>

    <div class="edit-content">
        <div class="row">
            <!-- Edit Form -->
            <div class="col-md-8">
                <div class="edit-card">
                    <div class="card-header">
                        <div class="header-content">
                            <h4><i class="fas fa-clock"></i> Schedule Details</h4>
                            <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                <i class="fas fa-trash"></i> Delete Schedule
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <form asp-action="Edit" class="schedule-edit-form">
                            <div asp-validation-summary="ModelOnly" class="validation-summary"></div>
                            <input type="hidden" asp-for="ScheduleId" />

                            <div class="form-grid">
                                <div class="form-group">
                                    <label asp-for="Date" class="form-label">
                                        <i class="fas fa-calendar-day"></i> Date
                                    </label>
                                    <input asp-for="Date" class="form-control" type="date"
                                           min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="Date" class="validation-message"></span>
                                    <small class="form-text">Select the new date for this schedule</small>
                                </div>

                                <div class="form-group">
                                    <label asp-for="IsAvailable" class="form-label">
                                        <i class="fas fa-toggle-on"></i> Availability
                                    </label>
                                    <select asp-for="IsAvailable" class="form-control availability-select">
                                        <option value="Yes">Available</option>
                                        <option value="No">Not Available</option>
                                    </select>
                                    <span asp-validation-for="IsAvailable" class="validation-message"></span>
                                    <small class="form-text">Set schedule availability status</small>
                                </div>

                                <div class="form-group">
                                    <label asp-for="StartTime" class="form-label">
                                        <i class="fas fa-play-circle"></i> Start Time
                                    </label>
                                    <input asp-for="StartTime" class="form-control" type="time" />
                                    <span asp-validation-for="StartTime" class="validation-message"></span>
                                    <small class="form-text">When the time slot begins</small>
                                </div>

                                <div class="form-group">
                                    <label asp-for="EndTime" class="form-label">
                                        <i class="fas fa-stop-circle"></i> End Time
                                    </label>
                                    <input asp-for="EndTime" class="form-control" type="time" />
                                    <span asp-validation-for="EndTime" class="validation-message"></span>
                                    <small class="form-text">When the time slot ends</small>
                                </div>
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-warning">
                                    <i class="fas fa-save"></i> Update Schedule
                                </button>
                                <a asp-action="Details" asp-route-id="@Model.ScheduleId" class="btn btn-info">
                                    <i class="fas fa-eye"></i> View Details
                                </a>
                                <a asp-action="Availability" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Back to List
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Quick Info Sidebar -->
            <div class="col-md-4">
                <div class="info-sidebar">
                    <div class="info-card">
                        <div class="card-header">
                            <h5><i class="fas fa-info-circle"></i> Current Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="info-grid">
                                <div class="info-item">
                                    <span class="info-label">
                                        <i class="fas fa-id-badge"></i> Schedule ID
                                    </span>
                                    <span class="info-value id-number">#@Model.ScheduleId</span>
                                </div>

                                <div class="info-item">
                                    <span class="info-label">
                                        <i class="fas fa-calendar-day"></i> Current Date
                                    </span>
                                    <span class="info-value">@Model.Date.ToString("yyyy-MM-dd")</span>
                                </div>

                                <div class="info-item">
                                    <span class="info-label">
                                        <i class="fas fa-clock"></i> Current Time
                                    </span>
                                    <span class="info-value time-slot">
                                        @Model.StartTime.ToString("hh\\:mm tt") - @Model.EndTime.ToString("hh\\:mm tt")
                                    </span>
                                </div>

                                <div class="info-item">
                                    <span class="info-label">
                                        <i class="fas fa-calendar-check"></i> Appointments
                                    </span>
                                    <span class="info-value">
                                        <span class="appointments-count @(Model.Appointments?.Count > 0 ? "has-appointments" : "no-appointments")">
                                            <i class="fas @(Model.Appointments?.Count > 0 ? "fa-exclamation-triangle" : "fa-check-circle")"></i>
                                            @(Model.Appointments?.Count ?? 0)
                                        </span>
                                    </span>
                                </div>
                            </div>

                            @if (Model.Appointments?.Count > 0)
                            {
                                <div class="warning-banner">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <div>
                                        <strong>Important Notice</strong>
                                        <p>This schedule has @Model.Appointments.Count active appointment(s). Changing the date or time may affect these appointments.</p>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="success-banner">
                                    <i class="fas fa-check-circle"></i>
                                    <div>
                                        <strong>No Conflicts</strong>
                                        <p>This schedule has no appointments. You can safely modify it.</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header danger-header">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle"></i> Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="warning-banner modal-warning">
                    <i class="fas fa-radiation"></i>
                    <div>
                        <h6>Delete Schedule</h6>
                        <p class="mb-0">Are you sure you want to delete this schedule? This action cannot be undone.</p>
                    </div>
                </div>

                <div class="delete-details">
                    <div class="detail-row">
                        <span class="label">Schedule ID:</span>
                        <span class="value">#@Model.ScheduleId</span>
                    </div>
                    <div class="detail-row">
                        <span class="label">Date:</span>
                        <span class="value">@Model.Date.ToString("yyyy-MM-dd")</span>
                    </div>
                    <div class="detail-row">
                        <span class="label">Time Slot:</span>
                        <span class="value">@Model.StartTime.ToString("hh\\:mm tt") - @Model.EndTime.ToString("hh\\:mm tt")</span>
                    </div>
                    <div class="detail-row">
                        <span class="label">Appointments:</span>
                        <span class="value">
                            <span class="appointment-count @(Model.Appointments?.Count > 0 ? "has-appointments" : "no-appointments")">
                                <i class="fas fa-calendar-check"></i>
                                @(Model.Appointments?.Count ?? 0) appointment(s)
                            </span>
                        </span>
                    </div>
                </div>

                @if (Model.Appointments?.Count > 0)
                {
                    <div class="critical-warning">
                        <i class="fas fa-skull-crossbones"></i>
                        <div>
                            <strong>Critical Warning</strong>
                            <p>This schedule has @Model.Appointments.Count active appointment(s). Deleting this schedule will permanently remove all associated appointments.</p>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <form asp-action="Delete" method="post" class="delete-form">
                    <input type="hidden" name="id" value="@Model.ScheduleId" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Schedule
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set minimum date to today
            const dateInput = document.querySelector('#Date');
            if (dateInput) {
                const today = new Date().toISOString().split('T')[0];
                if (!dateInput.value) {
                    dateInput.value = today;
                }
                dateInput.min = today;
            }

            // Real-time validation for time comparison
            const startTimeInput = document.querySelector('#StartTime');
            const endTimeInput = document.querySelector('#EndTime');

            function validateTimes() {
                if (startTimeInput.value && endTimeInput.value) {
                    if (startTimeInput.value >= endTimeInput.value) {
                        endTimeInput.setCustomValidity('End time must be after start time');
                        endTimeInput.classList.add('invalid-time');
                    } else {
                        endTimeInput.setCustomValidity('');
                        endTimeInput.classList.remove('invalid-time');
                    }
                }
            }

            if (startTimeInput && endTimeInput) {
                startTimeInput.addEventListener('change', validateTimes);
                endTimeInput.addEventListener('change', validateTimes);
            }

            // Add visual feedback for form interactions
            const formControls = document.querySelectorAll('.form-control');
            formControls.forEach(control => {
                control.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });

                control.addEventListener('blur', function() {
                    if (this.value.trim() === '') {
                        this.parentElement.classList.remove('focused');
                    }
                });

                // Check initial state
                if (control.value.trim() !== '') {
                    control.parentElement.classList.add('focused');
                }
            });

            // Initialize availability select based on current value
            const availabilitySelect = document.querySelector('.availability-select');
            if (availabilitySelect) {
                availabilitySelect.value = '@Model.IsAvailable';
            }
        });
    </script>
}